// Code generated by: operation -op-name Value -param-name value -types Tuple,Nil,Int,Uint,Bool,Float,String,UUID,Bytes,Variable,Clear,VStamp,VStampFuture. DO NOT EDIT.

package keyval

type (
	ValueOperation interface {
		// ForTuple performs the ValueOperation if the given value is of type Tuple.
		ForTuple(Tuple)
		// ForNil performs the ValueOperation if the given value is of type Nil.
		ForNil(Nil)
		// ForInt performs the ValueOperation if the given value is of type Int.
		ForInt(Int)
		// ForUint performs the ValueOperation if the given value is of type Uint.
		ForUint(Uint)
		// ForBool performs the ValueOperation if the given value is of type Bool.
		ForBool(Bool)
		// ForFloat performs the ValueOperation if the given value is of type Float.
		ForFloat(Float)
		// ForString performs the ValueOperation if the given value is of type String.
		ForString(String)
		// ForUUID performs the ValueOperation if the given value is of type UUID.
		ForUUID(UUID)
		// ForBytes performs the ValueOperation if the given value is of type Bytes.
		ForBytes(Bytes)
		// ForVariable performs the ValueOperation if the given value is of type Variable.
		ForVariable(Variable)
		// ForClear performs the ValueOperation if the given value is of type Clear.
		ForClear(Clear)
		// ForVStamp performs the ValueOperation if the given value is of type VStamp.
		ForVStamp(VStamp)
		// ForVStampFuture performs the ValueOperation if the given value is of type VStampFuture.
		ForVStampFuture(VStampFuture)
	}

	value interface {
		// Value executes the given ValueOperation on this value.
		Value(ValueOperation)

		// Eq returns true if the given value is equal to this value.
		Eq(interface{}) bool
	}
)

func _() {
	var (
		Tuple        Tuple
		Nil          Nil
		Int          Int
		Uint         Uint
		Bool         Bool
		Float        Float
		String       String
		UUID         UUID
		Bytes        Bytes
		Variable     Variable
		Clear        Clear
		VStamp       VStamp
		VStampFuture VStampFuture

		_ value = &Tuple
		_ value = &Nil
		_ value = &Int
		_ value = &Uint
		_ value = &Bool
		_ value = &Float
		_ value = &String
		_ value = &UUID
		_ value = &Bytes
		_ value = &Variable
		_ value = &Clear
		_ value = &VStamp
		_ value = &VStampFuture
	)
}

func (x Tuple) Value(op ValueOperation) {
	op.ForTuple(x)
}

func (x Nil) Value(op ValueOperation) {
	op.ForNil(x)
}

func (x Int) Value(op ValueOperation) {
	op.ForInt(x)
}

func (x Uint) Value(op ValueOperation) {
	op.ForUint(x)
}

func (x Bool) Value(op ValueOperation) {
	op.ForBool(x)
}

func (x Float) Value(op ValueOperation) {
	op.ForFloat(x)
}

func (x String) Value(op ValueOperation) {
	op.ForString(x)
}

func (x UUID) Value(op ValueOperation) {
	op.ForUUID(x)
}

func (x Bytes) Value(op ValueOperation) {
	op.ForBytes(x)
}

func (x Variable) Value(op ValueOperation) {
	op.ForVariable(x)
}

func (x Clear) Value(op ValueOperation) {
	op.ForClear(x)
}

func (x VStamp) Value(op ValueOperation) {
	op.ForVStamp(x)
}

func (x VStampFuture) Value(op ValueOperation) {
	op.ForVStampFuture(x)
}

