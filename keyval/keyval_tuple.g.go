// Code generated by: operation -op-name Tuple -param-name TupElement -types Tuple,Nil,Int,Uint,Bool,Float,String,UUID,Bytes,Variable,MaybeMore,VStamp,VStampFuture. DO NOT EDIT.

package keyval

type (
	TupleOperation interface {
		// ForTuple performs the TupleOperation if the given TupElement is of type Tuple.
		ForTuple(Tuple)
		// ForNil performs the TupleOperation if the given TupElement is of type Nil.
		ForNil(Nil)
		// ForInt performs the TupleOperation if the given TupElement is of type Int.
		ForInt(Int)
		// ForUint performs the TupleOperation if the given TupElement is of type Uint.
		ForUint(Uint)
		// ForBool performs the TupleOperation if the given TupElement is of type Bool.
		ForBool(Bool)
		// ForFloat performs the TupleOperation if the given TupElement is of type Float.
		ForFloat(Float)
		// ForString performs the TupleOperation if the given TupElement is of type String.
		ForString(String)
		// ForUUID performs the TupleOperation if the given TupElement is of type UUID.
		ForUUID(UUID)
		// ForBytes performs the TupleOperation if the given TupElement is of type Bytes.
		ForBytes(Bytes)
		// ForVariable performs the TupleOperation if the given TupElement is of type Variable.
		ForVariable(Variable)
		// ForMaybeMore performs the TupleOperation if the given TupElement is of type MaybeMore.
		ForMaybeMore(MaybeMore)
		// ForVStamp performs the TupleOperation if the given TupElement is of type VStamp.
		ForVStamp(VStamp)
		// ForVStampFuture performs the TupleOperation if the given TupElement is of type VStampFuture.
		ForVStampFuture(VStampFuture)
	}

	TupElement interface {
		// TupElement executes the given TupleOperation on this TupElement.
		TupElement(TupleOperation)

		// Eq returns true if the given value is equal to this TupElement.
		Eq(interface{}) bool
	}
)

func _() {
	var (
		Tuple        Tuple
		Nil          Nil
		Int          Int
		Uint         Uint
		Bool         Bool
		Float        Float
		String       String
		UUID         UUID
		Bytes        Bytes
		Variable     Variable
		MaybeMore    MaybeMore
		VStamp       VStamp
		VStampFuture VStampFuture

		_ TupElement = &Tuple
		_ TupElement = &Nil
		_ TupElement = &Int
		_ TupElement = &Uint
		_ TupElement = &Bool
		_ TupElement = &Float
		_ TupElement = &String
		_ TupElement = &UUID
		_ TupElement = &Bytes
		_ TupElement = &Variable
		_ TupElement = &MaybeMore
		_ TupElement = &VStamp
		_ TupElement = &VStampFuture
	)
}

func (x Tuple) TupElement(op TupleOperation) {
	op.ForTuple(x)
}

func (x Nil) TupElement(op TupleOperation) {
	op.ForNil(x)
}

func (x Int) TupElement(op TupleOperation) {
	op.ForInt(x)
}

func (x Uint) TupElement(op TupleOperation) {
	op.ForUint(x)
}

func (x Bool) TupElement(op TupleOperation) {
	op.ForBool(x)
}

func (x Float) TupElement(op TupleOperation) {
	op.ForFloat(x)
}

func (x String) TupElement(op TupleOperation) {
	op.ForString(x)
}

func (x UUID) TupElement(op TupleOperation) {
	op.ForUUID(x)
}

func (x Bytes) TupElement(op TupleOperation) {
	op.ForBytes(x)
}

func (x Variable) TupElement(op TupleOperation) {
	op.ForVariable(x)
}

func (x MaybeMore) TupElement(op TupleOperation) {
	op.ForMaybeMore(x)
}

func (x VStamp) TupElement(op TupleOperation) {
	op.ForVStamp(x)
}

func (x VStampFuture) TupElement(op TupleOperation) {
	op.ForVStampFuture(x)
}

